@model ExpensesmanagementSystem.Models.Expens

@{
    ViewBag.Title = "AddReceipt";
}

<h2>AddReceipt</h2>

@using (Html.BeginForm("AddReceipt", "Employees", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Expens</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.ReceiptNo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ReceiptNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ReceiptNo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Receiptdate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Receiptdate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Receiptdate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Receiptamount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Receiptamount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Receiptamount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <label for="file">FileName:</label>
            <input type="file" name="file" id="file" class="btn btn-default" value="Browse" />
        </div>

    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "ViewReceipt")
</div>







@*@Html.LabelFor(model => model.UploadReceipt,htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.UploadReceipt,type="file",new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.UploadReceipt, "", new { @class = "text-danger" })
        <input type="file" >
    </div>*@


@*@using (Html.BeginForm("Index", "Employee", FormMethod.Post, new { enctype = "multipart/form-data" }))
     {

        @Html.LabelFor(model => model.UploadReceipt, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.TextBoxFor(m => m.UploadReceipt, new { type = "file" })
        <br />
        @Html.ValidationMessageFor(m => m.UploadReceipt, "", new { @class = "error" })
    }
    </div>*@

@*<div class="form-group">
        @Html.LabelFor(model => model.EmployeeId, "EmployeeId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("EmployeeId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StatusofReceipt, "StatusofReceipt", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("StatusofReceipt", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.StatusofReceipt, "", new { @class = "text-danger" })
        </div>
    </div>*@



@*<div class="form-group">
        @Html.LabelFor(model => model.UploadReceipt, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.UploadReceipt, new { type = "file" })
            @Html.ValidationMessageFor(m => m.UploadReceipt, "", new { @class = "error" })
        </div>

    </div>*@